{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx\";\nimport { FriendListItem } from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.friendList,\n    children: friends.map(_ref2 => {\n      let {\n        avatar,\n        name,\n        isOnline,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        isOnline: isOnline,\n        avatar: avatar,\n        name: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/roman/Desktop/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx"],"names":["FriendListItem","PropTypes","s","FriendList","friends","friendList","map","avatar","name","isOnline","id","propTypes","arrayOf","shape","number","isRequired","bool","string"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,yBAAd;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACzC,sBACE;AAAI,IAAA,SAAS,EAAEF,CAAC,CAACG,UAAjB;AAAA,cACGD,OAAO,CAACE,GAAR,CAAY;AAAA,UAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,QAAhB;AAA0BC,QAAAA;AAA1B,OAAD;AAAA,0BACX,QAAC,cAAD;AAEE,QAAA,QAAQ,EAAED,QAFZ;AAGE,QAAA,MAAM,EAAEF,MAHV;AAIE,QAAA,IAAI,EAAEC;AAJR,SACOE,EADP;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbM;KAAMP,U;AAebA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,OAAO,EAAEH,SAAS,CAACW,OAAV,CACPX,SAAS,CAACY,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAET,SAAS,CAACa,MAAV,CAAiBC,UADP;AAEdN,IAAAA,QAAQ,EAAER,SAAS,CAACe,IAAV,CAAeD,UAFX;AAGdR,IAAAA,MAAM,EAAEN,SAAS,CAACgB,MAAV,CAAiBF,UAHX;AAIdP,IAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBF;AAJT,GAAhB,CADO;AADY,CAAvB","sourcesContent":["import { FriendListItem } from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <FriendListItem\n          key={id}\n          isOnline={isOnline}\n          avatar={avatar}\n          name={name}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}